name: release
on:
  push:
    tags:
      - 'v*'
jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Unshallow
        run: git fetch --prune --unshallow
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16
      - name: Describe plugin
        id: plugin_describe
        run: echo "::set-output name=api_version::$(go run . describe | jq -r '.api_version')"
      - name: Import GPG key
        id: import_gpg
        uses: paultyng/ghaction-import-gpg@v2.1.0
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          API_VERSION: ${{ steps.plugin_describe.outputs.api_version }}
  release-notify:
    runs-on: ubuntu-latest
    name: Release Notification
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - run: |
          echo "{\"text\":\"Packer : Release https://github.com/onfocusio/packer-plugin-vultr/releases/tag/${{ steps.get_version.outputs.VERSION }} \"}" > mattermost.json
      - uses: mattermost/action-mattermost-notify@master
        env:
          MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
          MATTERMOST_USERNAME: ${{ secrets.MATTERMOST_USERNAME}}
          MATTERMOST_ICON: ${{ secrets.MATTERMOST_ICON }}
